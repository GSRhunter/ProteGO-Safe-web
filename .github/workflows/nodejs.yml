---

name: build and deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn audit
      - run: yarn install
      - run: yarn build
      - run: cp firebase.json build/
        if: ${{ startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/tags/release-') }}
      - name: Archive Artifact
        if: ${{ startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/tags/release-') }}
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build

#  release:
#    needs: build
#    runs-on: ubuntu-latest
#    if: ${{ success() && contains(github.ref, '/tags/release') }}
#    steps:
#     - name: Download Artifact
#       uses: actions/download-artifact@master
#       with:
#         name: build
#     - name: Upload Release
#       uses: softprops/action-gh-release@v1
#       with:
#         files: build/*
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/release-') || startsWith(github.ref, 'refs/heads/dev-') }}
    steps:

      - name: Set env to STAGE
        if: startsWith(github.ref, 'refs/tags/release-') && !contains(github.ref, 'dev')
        run: |
          echo "::set-env name=ENVIRONMENT::STAGE"
      - name: Set env to DEV
        if: startsWith(github.ref, 'refs/heads/dev-') && !contains(github.ref, 'release')
        run: |
          echo "::set-env name=ENVIRONMENT::DEV"
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Set Env's from Git refs.
        run: |
          echo "::set-env name=SOURCE_NAME::${GITHUB_REF#refs/*/}"
          echo "::set-env name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}"
          echo "::set-env name=SOURCE_TAG::${GITHUB_REF#refs/tags/}"
          echo "::set-env name=GCP_SA_KEY::${{ secrets[env.SECRET_ENV] }}"
          echo "::set-env name=SECRET_PROJECT::${{ secrets[env.PROJECT_ENV] }}"
        env:
          SECRET_ENV: "${{ env.ENVIRONMENT }}_FIREBASE_HOSTING_SAFE"
          PROJECT_ENV: "${{ env.ENVIRONMENT }}_FIREBASE_PROJECT"

      - name: Sed Firebase.json
        run: sed -ie 's|site_to_sed|${{ env.SECRET_PROJECT }}|g' firebase.json

      - name: Deploy to Firebase
        if: ( env.ENVIRONMENT == 'STAGE' && env.SOURCE_BRANCH == 'master' ) || env.ENVIRONMENT == 'DEV'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting --project $SECRET_PROJECT
